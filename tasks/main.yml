---
- name: Check if GLPI is already installed
  stat:
    path: "{{ glpi_install_path }}/glpi"
  register: glpiinstalled

- name: Download and extract GLPI
  unarchive:
    src: "{{ glpi_download_url }}"
    remote_src: true
    dest: "{{ glpi_install_path }}"
    owner: "{{ glpi_web_owner }}"
    group: "{{ glpi_web_group }}"
    validate_certs: false
  when: not glpiinstalled.stat.exists or glpi_update

- name: Configure and install database in GLPI
  command:
    cmd: >
      php bin/console db:install -H {{ glpi_db_host }} -P {{ glpi_db_port }} -d {{ glpi_db_name }} -u {{ glpi_db_user }}
       -p {{ glpi_db_password }} -L {{ glpi_lang }} -q
  args:
    chdir: "{{ glpi_install_path }}/glpi/"
  when: not glpiinstalled.stat.exists

- name: Update database
  command:
    cmd: php bin/console db:update
  args:
    chdir: "{{ glpi_install_path }}/glpi/"
  when: glpi_update

- name: Delete /install directory
  file:
    path: "{{ glpi_install_path }}/glpi/install/"
    state: absent
    
- name: Changement des droits sur les dossiers de GLPI
  command: find /var/www/glpi -type d -exec chmod -c 0750 {} \;
  register: chmod_result
  changed_when: "chmod_result.stdout != \"\""
  become: true

- name: Changement des droits sur les fichiers de GLPI
  command: find /var/www/glpi -type f -exec chmod -c 0640 {} \;
  register: chmod_result
  changed_when: "chmod_result.stdout != \"\""
  become: true

- name: Download plugins
  get_url:
    url: "{{ item }}"
    dest: "{{ glpi_install_path }}/glpi/plugins"
  with_items: "{{ glpi_plugins_dl_addr }}"
  when: glpi_plugins_dl_addr is defined

- name: Unarchive plugins
  unarchive:
    src: "{{ glpi_install_path }}/glpi/plugins/{{ item }}"
    dest: "{{ glpi_install_path }}/glpi/plugins"
    owner: "{{ glpi_web_owner }}"
    group: "{{ glpi_web_group }}"
    remote_src: true
  with_items: "{{ glpi_plugins_tar_name }}"
  when: glpi_plugins_dl_addr is defined


